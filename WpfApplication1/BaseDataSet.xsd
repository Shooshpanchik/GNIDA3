<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BaseDataSet" targetNamespace="http://tempuri.org/BaseDataSet.xsd" xmlns:mstns="http://tempuri.org/BaseDataSet.xsd" xmlns="http://tempuri.org/BaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WpfApplication1.Properties.Settings.GlobalReference.Default.BaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="proceduresTableAdapter" GeneratorDataComponentClassName="proceduresTableAdapter" Name="procedures" UserDataComponentName="proceduresTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BaseConnectionString (Settings)" DbObjectName="dbo.procedures" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[procedures] WHERE (([Addr] = @Original_Addr) AND ((@IsNull_type = 1 AND [type] IS NULL) OR ([type] = @Original_type)) AND ((@IsNull_end = 1 AND [end] IS NULL) OR ([end] = @Original_end)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Addr" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Addr" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_end" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="end" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_end" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="end" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[procedures] ([Addr], [Name], [type], [end]) VALUES (@Addr, @Name, @type, @end);
SELECT Addr, Name, type, [end] FROM procedures WHERE (Addr = @Addr)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Addr" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Addr" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@end" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="end" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Addr, Name, type, [end] FROM dbo.procedures</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[procedures] SET [Addr] = @Addr, [Name] = @Name, [type] = @type, [end] = @end WHERE (([Addr] = @Original_Addr) AND ((@IsNull_type = 1 AND [type] IS NULL) OR ([type] = @Original_type)) AND ((@IsNull_end = 1 AND [end] IS NULL) OR ([end] = @Original_end)));
SELECT Addr, Name, type, [end] FROM procedures WHERE (Addr = @Addr)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Addr" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Addr" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@end" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="end" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Addr" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Addr" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_end" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="end" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_end" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="end" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Addr" DataSetColumn="Addr" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="type" DataSetColumn="type" />
              <Mapping SourceColumn="end" DataSetColumn="end" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="BaseConnectionString (Settings)" DbObjectName="dbo.procedures" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetFuncAddr" Modifier="Public" Name="GetFuncAddr" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetFuncAddr">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Name
FROM            procedures
WHERE        (Addr &lt;= @Param1)and([end]&gt;@Param1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Param1" ColumnName="Addr" DataSourceName="[D:\USERS\DAMIR\SOURCE\REPOS\GNIDA3\WPFAPPLICATION1\BASE.MDF].dbo.procedures" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Param1" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="Addr" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="BaseConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarQuery" Modifier="Public" Name="ScalarQuery" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ScalarQuery">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(*) AS Expr1
FROM            procedures
WHERE        (Addr &lt;= @Param1) AND ([end] &gt; @Param1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Param1" ColumnName="Addr" DataSourceName="[D:\USERS\DAMIR\SOURCE\REPOS\GNIDA3\WPFAPPLICATION1\BASE.MDF].dbo.procedures" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Param1" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="Addr" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BaseDataSet" msprop:Generator_UserDSName="BaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="procedures" msprop:Generator_TableClassName="proceduresDataTable" msprop:Generator_TableVarName="tableprocedures" msprop:Generator_RowChangedName="proceduresRowChanged" msprop:Generator_TablePropName="procedures" msprop:Generator_RowDeletingName="proceduresRowDeleting" msprop:Generator_RowChangingName="proceduresRowChanging" msprop:Generator_RowEvHandlerName="proceduresRowChangeEventHandler" msprop:Generator_RowDeletedName="proceduresRowDeleted" msprop:Generator_RowClassName="proceduresRow" msprop:Generator_UserTableName="procedures" msprop:Generator_RowEvArgName="proceduresRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Addr" msprop:Generator_ColumnVarNameInTable="columnAddr" msprop:Generator_ColumnPropNameInRow="Addr" msprop:Generator_ColumnPropNameInTable="AddrColumn" msprop:Generator_UserColumnName="Addr" type="xs:long" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="type" msprop:Generator_ColumnVarNameInTable="columntype" msprop:Generator_ColumnPropNameInRow="type" msprop:Generator_ColumnPropNameInTable="typeColumn" msprop:Generator_UserColumnName="type" type="xs:int" minOccurs="0" />
              <xs:element name="end" msprop:Generator_ColumnVarNameInTable="columnend" msprop:Generator_ColumnPropNameInRow="end" msprop:Generator_ColumnPropNameInTable="endColumn" msprop:Generator_UserColumnName="end" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:procedures" />
      <xs:field xpath="mstns:Addr" />
    </xs:unique>
  </xs:element>
</xs:schema>